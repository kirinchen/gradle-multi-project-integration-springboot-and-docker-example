buildscript {
    repositories {
      maven {
        url "https://plugins.gradle.org/m2/"
      }
      mavenCentral()
    }
    dependencies {
// tag::build[]
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
// end::build[]
    }
}


// tag::plugin[]
apply plugin: 'com.palantir.docker'
// end::plugin[]

// This is used as the docker image prefix (org)
group = 'surfm'


bootJar {
  mainClassName = 'net.surfm.account.Application'
    baseName = 'surfm-account-docker'
    version =  '0.1.0'
}
jar.enabled=true



dependencies {
    compile (
    	"org.springframework.boot:spring-boot-starter-security",
    	"org.springframework.boot:spring-boot-starter-thymeleaf",
    	"org.springframework.boot:spring-boot-devtools",
    	"commons-collections:commons-collections:3.2",
    	"org.springframework.boot:spring-boot-starter-data-jpa",
    	"org.apache.commons:commons-io:1.3.2",
    	"mysql:mysql-connector-java:8.0.13",
    	"org.jasypt:jasypt-springsecurity3:1.9.0",
    	"com.lambdaworks:scrypt:1.3.3",
    		)
    		
    	testCompile (
    		"javax.json:javax.json-api:1.0",
    		"org.glassfish:javax.json:1.0.4"
    	)		
}









// tag::task[]
task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}
docker {
    name "${project.group}/${bootJar.baseName}"
    copySpec.from(tasks.unpack.outputs).into("dependency")
    buildArgs(['DEPENDENCY': "dependency"])
}
// end::task[]

